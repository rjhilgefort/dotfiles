###############################################################################
# Alias
###############################################################################

# not helpfull helpers
alias starwars="telnet towel.blinkenlights.nl"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec $SHELL -l"

# Get OS X Software Updates, and update installed Ruby gems, Homebrew, npm, and their installed packages
alias update='sudo softwareupdate -i -a; brew update; brew upgrade; brew cleanup; npm update npm -g; npm update -g; sudo gem update --system; sudo gem update'

# Trim new lines and copy to clipboard
alias copy="tr -d '\n' | pbcopy"

### colorls - https://github.com/athityakumar/colorls
# Move standard ls
alias ols="ls"
# Base formats
alias ls="colorls -A"           # short, multi-line
alias ll="colorls -1A"          # list, 1 per line
alias ld="ll"                   # ^, NOTE: Trying to move to this for alternate hand commands
alias la="colorls -lA"          # list w/ info
# [d] Sort output with directories first
alias lsd="ls --sort-dirs"
alias lld="ll --sort-dirs"
alias ldd="ld --sort-dirs"
alias lad="la --sort-dirs"
# [t] Sort output with recent modified first
alias lst="ls -t"
alias llt="ll -t"
alias ldt="ld -t"
alias lat="la -t"
# [g] Add git status of each item in output
alias lsg="ls --git-status"
alias llg="ll --git-status"
alias ldg="ld --git-status"
alias lag="la --git-status"

# General
alias cl="clear"
alias g="git"

# Homebrew
alias b="brew"
alias bs="brew search"
alias bi="brew install"
alias bc="brew cask"
alias bcs="brew cask search"
alias bci="brew cask install"

# NPM / Yarn
alias n="npm"
alias y="yarn"
alias ni="npm install"
alias yi="yarn install"
alias nis="npm install --save"
alias ya="yarn add"
alias nisd="npm install --save-dev"
alias yad="yarn add --dev"
alias nr="npm run"
alias yr="yarn run"
alias nrs="npm run start"
alias yrs="yarn run start"
alias nrl="npm run lint"
alias yrl="yarn run lint"
alias nrlf="npm run lint:fix"
alias yrlf="yarn run lint:fix"
alias nrlw="npm run lint:watch"
alias yrlw="yarn run lint:watch"
alias nrlc="npm run lint:changed"
alias yrlc="yarn run lint:changed"
alias nrt="npm run test"
alias yrt="yarn run test"
alias nrtw="npm run test:watch"
alias yrtw="yarn run test:watch"

# Emacs
alias em="emacs -nw"
alias ed="emacs --daemon"
alias ec="emacsclient -c"
alias e="ec"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"
alias cleanup-node_modules="find . -name 'node_modules' -exec rm -rf '{}' +"

# Empty the Trash on all mounted volumes and the main HDD
# Also, clear Appleâ€™s System Logs to improve shell startup speed
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl"

# Show/hide hidden files in Finder
alias hidden-show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hidden-hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Show/Hide all desktop icons (useful when presenting)
alias desktop-show="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"
alias desktop-hide="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Lock the screen (when going AFK)
alias afk-lock='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'
# Put up screensaver (when going AFK)
alias afk-screen='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine &> /dev/null'
alias afk='afk-screen'

# see what apps are currently using the network
alias appsoninternet='sudo lsof -P -i -n | cut -f 1 -d " " | uniq'

# Flush DNS
flush-dns() {
  sudo killall -HUP mDNSResponder
  sudo killall mDNSResponderHelper
  sudo dscacheutil -flushcache
}

# list what ports are currently open
alias listopenports='sudo lsof -i -P | grep -i "listen"'

# Dock mods - change the behavior of the dock
alias dock-reset='defaults delete com.apple.dock autohide-delay && killall Dock' # Back to normal
alias dock-meh='defaults write com.apple.dock autohide-delay -float 2 && killall Dock' # 2 seconds
alias dock-fuckoff='defaults write com.apple.dock autohide-delay -float 1000 && killall Dock' # 1000 seconds

# control volume
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume 7'"

# clvv/fasd
alias j='fasd_cd -d'
alias jj='fasd_cd -d -i'
alias jvim='fasd -f -e vim'
alias jem='fasd -f -e emacs'
alias jopen='fasd -f -e open'
alias jcat='fasd -f -e cat'
alias jless='fasd -f -e less'

# docker
alias d='docker'
alias d-containers-stop-all='docker stop $(docker ps -a -q)'
alias d-containers-remove-all='docker rm $(docker ps -a -q)'
alias d-images-remove-all='docker rmi $(docker images -q)'
alias d-volume-remove-all='docker volume rm $(docker volume ls -qf dangling=true)'
d-exec() { docker exec -it $1 bash; }

# docker-compose
alias dc='docker-compose'

# ssh shortcuts
# ssh tunnel on localhost:{localPort} to {remote} for {remoteServiceExposedonPort}
# alias ssh-tunnel='ssh -f {user}@{remote} -L {localPort}:localhost:{remotePort} -i /Users/rjhilgefort/.ssh/id_rsa -N'
alias ssh-do-personal-tunnel='ssh -f -p 4444 rjhilgefort@192.241.245.99 -L 27019:localhost:27017 -i /Users/rjhilgefort/.ssh/id_rsa -N'

# tig
alias t='tig status'

# ranger
alias r='ranger'

# pm2
alias pm='pm2'

# proxychains4
alias proxychains4='proxychains'

# git
alias git-submodule-list="grep path .gitmodules | sed 's/.*= //'"
alias git-merge-complete='git add -A && git commit --no-edit && git pp'
alias git-commit-cleanup='git add -A && git commit -m "Cleanup, tweaks, linter fixes" && git pp'
alias git-whoami='echo "Current user: $(git config user.email)"'

# gitconfig switching
git-config-rjh() {
  ln -sf ~/dotfiles/.gitconfig.rjhilgefort ~/.gitconfig
  killall gpg-agent && echo 'gpg-agent stopped'
  git-whoami
}
git-config-ss() {
  ln -sf ~/dotfiles/.gitconfig.oramified-fcc ~/.gitconfig
  gpgconf --launch gpg-agent && echo 'gpg-agent started'
  git-whoami
}

# `mkdir` and `cd` together forever
# https://unix.stackexchange.com/questions/9123/is-there-a-one-liner-that-allows-me-to-create-a-directory-and-move-into-it-at-th
mkcd () {
  case "$1" in
    */..|*/../) cd -- "$1";; # that doesn't make any sense unless the directory already exists
    /*/../*) (cd "${1%/../*}/.." && mkdir -p "./${1##*/../}") && cd -- "$1";;
    /*) mkdir -p "$1" && cd "$1";;
    */../*) (cd "./${1%/../*}/.." && mkdir -p "./${1##*/../}") && cd "./$1";;
    ../*) (cd .. && mkdir -p "${1#.}") && cd "$1";;
    *) mkdir -p "./$1" && cd "./$1";;
  esac
}
